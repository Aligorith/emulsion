name: Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: rustfmt
        run: cargo fmt --all -- --check

  clippy:
    needs: rustfmt
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: clippy
        run: cargo clippy --verbose

  build:
    needs: clippy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install dependencies (linux)
        if: matrix.os == 'ubuntu-20.04'
        run: |
          DEBIAN_FRONTEND=noninteractive sudo apt-get update
          DEBIAN_FRONTEND=noninteractive sudo apt-get install -y ninja-build nasm meson

      - name: Install dependencies (macOS)
        if: matrix.os == 'macOS-latest'
        run: |
          brew install ninja nasm meson

      - name: Build and run tests (linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          env RUSTFLAGS="-C opt-level=0" cargo test --verbose --all-features

      - name: Build and run tests (windows)
        if: matrix.os == 'windows-latest'
        run: |
          env RUSTFLAGS="-C opt-level=0" cargo test --verbose --features=networking
